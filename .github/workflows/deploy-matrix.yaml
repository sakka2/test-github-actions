name: Screwdriver-like Pipeline with Matrix

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  dryrun:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: sandbox-dryrun-ssk
            K8S_API_SERVER: "https://ssk-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "intermediary-deployment/ssk-sandbox/intermediary.yaml"
            SD_SHELLKEY_MANIFEST_FILE: "ssk-sandbox/k8s-dryrun-token.yaml"

          - name: sandbox-dryrun-kks
            K8S_API_SERVER: "https://kks-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "intermediary-deployment/kks-sandbox/intermediary.yaml"
            SD_SHELLKEY_MANIFEST_FILE: "kks-sandbox/k8s-dryrun-token.yaml"

          - name: prod-dryrun-ssk
            K8S_API_SERVER: "https://ssk-prod.co.jp"
            K8S_NAMESPACE: "screwdriver"
            K8S_DEPLOY_TARGET: "intermediary-deployment/ssk-prod/intermediary.yaml"
            SD_SHELLKEY_MANIFEST_FILE: "ssk-prod/k8s-dryrun-token.yaml"

          - name: prod-dryrun-kks
            K8S_API_SERVER: "https://kks-prod.co.jp"
            K8S_NAMESPACE: "screwdriver"
            K8S_DEPLOY_TARGET: "intermediary-deployment/kks-prod/intermediary.yaml"
            SD_SHELLKEY_MANIFEST_FILE: "kks-prod/k8s-dryrun-token.yaml"

    env:
      SD_SHELLKEY_MANIFEST_ENABLE: "true"

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Overwrite for get diff
        run: |
          echo 'Overwrite for get diff.'
          ## ls -1A "${{ matrix.K8S_DEPLOY_TARGET }}" | xargs -I% sh -c "echo '---'; kubectl diff -f % || true"
          ls -1A "${{ matrix.K8S_DEPLOY_TARGET }}" 

      - name: wait-for-ready
        run: echo 'No need to wait.'

      - name: Debug Info
        run: |
          echo "Completed dryrun for ${ { matrix.name }}"

  sandbox-deploy-secrets:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: sandbox-deploy-ssk
            K8S_API_SERVER: "https://ssk-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "secrets/ssk-sandbox"
            SHELLKEY_MANIFEST_FILE: shellkey-manifests/ssk-sandbox/k8s-deploy-token.yaml
            GPG_PRIVATE_KEY_PATH: /tokens/kubesec_sandbox.gpg_privatekey
          - name: sandbox-deploy-kks
            K8S_API_SERVER: "https://kks-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "secrets/kks-sandbox"
            SHELLKEY_MANIFEST_FILE: shellkey-manifests/kks-sandbox/k8s-deploy-token.yaml
            GPG_PRIVATE_KEY_PATH: /tokens/kubesec_sandbox.gpg_privatekey
    env:
      SD_SHELLKEY_MANIFEST_ENABLE: "true"

    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        run: |
          echo "Running deploy secrets for ${{ matrix.name }}"

      - name: Slack Notification on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          mention: here
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  sandbox-deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [sandbox-deploy-secrets]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: sandbox-deploy-ssk
            K8S_API_SERVER: "https://ssk-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "intermediary-deployment/ssk-sandbox/sd-intermediary.yaml"
            K8S_RESOURCES: "deployment/sdintermediary"
          - name: sandbox-deploy-kks
            K8S_API_SERVER: "https://kks-sandbox.co.jp"
            K8S_NAMESPACE: "screwdriver-sandbox"
            K8S_DEPLOY_TARGET: "intermediary-deployment/kks-sandbox/sd-intermediary.yaml"
            K8S_RESOURCES: "deployment/sdintermediary"
    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        run: |
          echo "Running deploy for ${{ matrix.name }}"

      - name: Slack Notification on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          mention: here
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  sandbox-functest:
    runs-on: ubuntu-latest
    needs: [sandbox-deploy]
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: install_curl
        run: |
          echo "If OS is CentOS7, override curl. Rocky9 might differ."
      - name: prepare-config
        run: |
          echo "ssh config settings"
      - name: fetch-certfiles
        run: |
          echo "fetching certificate"
      - name: test-x509
        run: |
          echo "test X.509"
      - name: test-private-key
        run: |
          echo "test private key"
      - name: test-ntoken
        run: |
          echo "test nToken"
